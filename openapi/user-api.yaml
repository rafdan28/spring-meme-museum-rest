openapi: 3.0.1
info:
  title: MEMEMUSEUM - User API
  version: 1.0.0
paths:
  /api/users/register:
    post:
      tags:
        - User
      summary: Registra un nuovo utente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: Utente registrato con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "401":
          description: Username e/o Email già esistenti

  /api/users/login:
    post:
      tags:
        - User
      summary: Effettua il login e restituisce un JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Token restituito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtResponse"
        "401":
          description: Credenziali non valide

  /api/users/recover:
    post:
      tags:
        - User
      summary: Recupera le credenziali (username e/o password)
      description: L'utente può richiedere il recupero dello username, della password o entrambi.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoverRequest"
      responses:
        "200":
          description: Istruzioni inviate via email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoverResponse"
        "404":
          description: Utente non trovato

  /api/users/user:
    get:
      tags:
        - User
      summary: Ottiene i dati dell'utente autenticato
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Dati utente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Token non valido o assente

    patch:
      tags:
        - User
      summary: Modifica i dati dell'utente autenticato
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                  format: email
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Utente aggiornato con successo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Dati non validi
        "401":
          description: Non autorizzato

  /api/users/user/memes:
    get:
      tags:
        - User
      summary: Recupera tutti i meme creati dall'utente autenticato
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista dei meme creati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MemeResponse"
        "401":
          description: Non autorizzato
          
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required: [email, username, password]
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
        password:
          type: string
          format: password

    RegisterResponse:
      type: object
      required: [message]
      properties:
        message:
          type: string

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        username:
          type: string
        password:
          type: string
          format: password

    JwtResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
          example: Bearer

    RecoverRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
        recoverUsername:
          type: boolean
          default: false
        recoverPassword:
          type: boolean
          default: false

    RecoverResponse:
      type: object
      properties:
        message:
          type: string
          example: "Istruzioni per il recupero sono state inviate via email."

    UserResponse:
      type: object
      properties:
        id:
          type: long
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        username:
          type: string
        roles:
          type: array
          items:
            type: string
        imageProfileUrl:
          type: string
    
    MemeResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        imageUrl:
          type: string
        tags:
          type: array
          items:
            type: string
        author:
          type: string
        authorImageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        upvotes:
          type: integer
        downvotes:
          type: integer
        comments:
          type: integer
        userVote:
          type: integer
          nullable: true
