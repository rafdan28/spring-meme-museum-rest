openapi: 3.0.1
info:
  title: MEMEMUSEUM - User API
  version: 1.0.0
paths:
  /api/users/register:
    post:
      tags:
        - User
      summary: Registra un nuovo utente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Utente registrato con successo
          content:
            application/json:
              schema:
                type: string
                example: "Utente registrato con successo"
        "409":
          description: Username e/o Email già esistenti
          content:
            application/json:
              schema:
                type: string
                example: "Username e/o Email già esistenti"

  /api/users/login:
    post:
      tags:
        - User
      summary: Effettua il login e restituisce un JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Token restituito
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JwtResponse"
        "401":
          description: Credenziali non valide

  /api/users/user:
    get:
      tags:
        - User
      summary: Ottiene i dati dell'utente autenticato
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Dati utente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: Token non valido o assente

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required: [email, username, password]
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        username:
          type: string
        password:
          type: string
          format: password

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        username:
          type: string
        password:
          type: string
          format: password

    JwtResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
          example: Bearer

    UserResponse:
      type: object
      properties:
        id:
          type: long
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        username:
          type: string
        roles:
          type: array
          items:
            type: string
